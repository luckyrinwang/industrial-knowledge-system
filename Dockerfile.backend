# 后端Dockerfile
FROM python:3.9-slim

# 替换为国内Debian镜像源并安装系统依赖
RUN echo 'deb https://mirrors.aliyun.com/debian/ bookworm main contrib non-free' > /etc/apt/sources.list && \
    echo 'deb https://mirrors.aliyun.com/debian/ bookworm-updates main contrib non-free' >> /etc/apt/sources.list && \
    echo 'deb https://mirrors.aliyun.com/debian-security bookworm-security main contrib non-free' >> /etc/apt/sources.list && \
    apt-get update -o Acquire::http::Timeout=60 -o Acquire::https::Timeout=60 -o Acquire::Retries=5 && \
    apt-get install -y --no-install-recommends \
        libreoffice \
        unoconv \
        ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /app

# 复制依赖文件
COPY requirements.txt .

# 安装Python依赖，设置更可靠的镜像源和超时设置
RUN pip config set global.timeout 300 && \
    pip config set global.retries 10 && \
    pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && \
    pip config set global.trusted-host mirrors.aliyun.com && \
    pip install --no-cache-dir --default-timeout=300 -r requirements.txt || \
    pip install --no-cache-dir --default-timeout=300 -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple || \
    pip install --no-cache-dir --default-timeout=300 -r requirements.txt -i https://mirrors.cloud.tencent.com/pypi/simple

# 复制应用程序代码
COPY backend/ .

# 创建上传目录
RUN mkdir -p uploads && chmod 777 uploads

# 复制并设置启动脚本权限
COPY backend/start.sh /app/start.sh
RUN chmod +x /app/start.sh

# 从环境变量获取端口，默认为5000
ENV PORT=5000

# 暴露端口 - 使用ARG使其可在构建时配置
EXPOSE ${PORT}

# 运行应用
CMD ["/app/start.sh"]
