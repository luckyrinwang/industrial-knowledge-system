version: '3'

services:
  # MySQL数据库
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: industrial_knowledge
      MYSQL_USER: industrial_user
      MYSQL_PASSWORD: industrial_password
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network

  # 后端API服务（使用修改版Dockerfile）
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.alt
      args:
        - http_proxy=${http_proxy}
        - https_proxy=${https_proxy}
    restart: always
    depends_on:
      - db
    environment:
      - SECRET_KEY=production_secret_key
      - JWT_SECRET_KEY=production_jwt_secret_key
      - DATABASE_URI=mysql+pymysql://industrial_user:industrial_password@db/industrial_knowledge
      - PORT=${BACKEND_PORT:-5000}
      # 添加超时相关设置
      - PIP_TIMEOUT=200
      - PIP_DEFAULT_TIMEOUT=200
      - PIP_RETRIES=5
    ports:
      - "${BACKEND_PORT:-5000}:${BACKEND_PORT:-5000}"
    volumes:
      - uploads_data:/app/uploads
    networks:
      - app_network
    # 增加数据库连接超时等待
    command: >
      bash -c "
        echo 'Waiting for database...'
        sleep 10
        python run.py
      "

  # 前端Web服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - http_proxy=${http_proxy}
        - https_proxy=${https_proxy}
    restart: always
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - BACKEND_URL=http://backend:${BACKEND_PORT:-5000}
    networks:
      - app_network

# 持久化卷
volumes:
  db_data:
  uploads_data:

# 网络配置
networks:
  app_network:
    driver: bridge
