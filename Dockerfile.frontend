# 前端Dockerfile
FROM node:16-alpine as build-stage

# 设置工作目录
WORKDIR /app

# 复制package.json和package-lock.json
COPY frontend/package*.json ./

# 安装依赖
RUN npm install

# 复制源码
COPY frontend/ .

# 确保node_modules/.bin中的文件有执行权限
RUN chmod +x node_modules/.bin/*

# 构建生产版本
RUN npm run build

# 生产阶段
FROM nginx:stable-alpine as production-stage

# 从构建阶段复制构建结果到nginx静态资源目录
COPY --from=build-stage /app/dist /usr/share/nginx/html

# 复制nginx配置为模板
COPY nginx.conf /etc/nginx/conf.d/default.conf.template

# 创建启动脚本
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo 'export backend_port=${BACKEND_PORT:-5000}' >> /docker-entrypoint.sh && \
    echo 'envsubst "\$backend_port" < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# 暴露端口
EXPOSE 80

# 启动nginx
CMD ["/docker-entrypoint.sh"]
